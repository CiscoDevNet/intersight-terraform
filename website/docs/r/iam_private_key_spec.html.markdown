---
subcategory: "iam"
layout: "intersight"
page_title: "Intersight: intersight_iam_private_key_spec"
description: |-
  Parameters used to generate a private key.
---

# Resource: intersight_iam_private_key_spec
Parameters used to generate a private key.
## Argument Reference
The following arguments are supported:
* `algorithm`:(HashMap) - Algorithm used to generate the key pair and algorithm-speicifc parameters, such as RSA modulus size. 
This complex property has following sub-properties:
  + `additional_properties`:(JSON) - Additional Properties as per object type, can be added as JSON using `jsonencode()`. Allowed Types are: [pkix.EcdsaKeySpec](#pkixEcdsaKeySpec)
[pkix.EddsaKeySpec](#pkixEddsaKeySpec)
[pkix.RsaAlgorithm](#pkixRsaAlgorithm)
  + `name`:(string)(Computed) Name of the key generation algorithm.* `RSA` - Key pairs should be generated by the RSA algorithm. 
  + `object_type`:(string) The fully-qualified name of the instantiated, concrete type.The value should be the same as the 'ClassId' property.The enum values provides the list of concrete types that can be instantiated from this abstract type. 
* `certificate_request`:(HashMap) - A reference to a iamCertificateRequest resource.When the $expand query parameter is specified, the referenced resource is returned inline. 
This complex property has following sub-properties:
  + `moid`:(string)(Computed) The Moid of the referenced REST resource. 
  + `object_type`:(string) The fully-qualified name of the remote type referred by this relationship. 
  + `selector`:(string)(Computed) An OData $filter expression which describes the REST resource to be referenced. This field maybe set instead of 'moid' by clients.1. If 'moid' is set this field is ignored.1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of theresource matching the filter expression and populates it in the MoRef that is part of the objectinstance being inserted/updated to fulfill the REST request.An error is returned if the filter matches zero or more than one REST resource.An example filter string is: Serial eq '3AA8B7T11'. 
* `moid`:(string) The unique identifier of this Managed Object instance. 
* `tags`:(Array)
This complex property has following sub-properties:
  + `key`:(string) The string representation of a tag key. 
  + `value`:(string) The string representation of a tag value. 


## Import
`intersight_iam_private_key_spec` can be imported using the Moid of the object, e.g.
```
$ terraform import intersight_iam_private_key_spec.example 1234567890987654321abcde
```
## Allowed Types in `AdditionalProperties`
 
### [pkix.EcdsaKeySpec](#argument-reference)
The key pair is generated using Elliptic Curve Digital Signature Algorithm (ECDSA), as defined in FIPS 186-4.
The ECDSA standard was originally developed for the American National Standards Institute by the Accredited
Standards Committee on Financial Services, X9.
ANS X9.62 defines methods for digital signature generation and verification using ECDSA. Specifications for
the generation of the domain parameters used during the generation and verification of digital signatures
are also included in ANS X9.62.
* `curve`:(string) A specific set of Elliptic Curve parameters, as recommended by NIST in FIPS 186-4.* `P256` - P256 returns a Curve which implements P-256, as defined in FIPS 186-4, section D.2.3.* `P224` - P224 returns a Curve which implements P-224, as defined in FIPS 186-4, section D.2.2.* `P384` - P384 returns a Curve which implements P-384, as defined in FIPS 186-4, section D.2.4.* `P521` - P521 returns a Curve which implements P-521, as defined in FIPS 186-4, section D.2.5. 

### [pkix.EddsaKeySpec](#argument-reference)
The key pair is generated using Edwards-Curve Digital Signature Algorithm (EdDSA).
The Edwards-curve Digital Signature Algorithm (EdDSA) is a variant of
Schnorr's signature system with (possibly twisted) Edwards curves.
* `algorithm`:(string) The EdDSA algorithm, as defined in RFC 8032.* `Ed25519` - The edwards25519 curve, as defined in RFC 8032 section 5.1.* `Ed25519ph` - The edwards25519 curve for the PureEdDSA variant.* `Ed25519ctx` - The edwards25519 curve for the HashEdDSA variant. 

### [pkix.RsaAlgorithm](#argument-reference)
The key pair is generated using the RSA algorithm and specified parameters.
* `modulus`:(int) The length of the RSA key, expressed in bits, for both public and private keys.* `2048` - A key length of 2048 bits.* `2560` - A key length of 2560 bits.* `3072` - A key length of 3072 bits.* `3584` - A key length of 3584 bits.* `4096` - A key length of 4096 bits. 
  